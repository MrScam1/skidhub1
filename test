local x2Code = {
	"KITTGAMING",
	"ENYU_IS_PRO",
	"FUDD10",
	"BIGNEWS",
	"THEGREATACE",
	"SUB2GAMERROBOT_EXP1",
	"STRAWHATMAIME",
	"SUB2OFFICIALNOOBIE",
	"SUB2NOOBMASTER123",
	"SUB2DAIGROCK",
	"AXIORE",
	"TANTAIGAMIMG",
	"STRAWHATMAINE",
	"JCWK",
	"FUDD10_V2",
	"SUB2FER999",
	"MAGICBIS",
	"TY_FOR_WATCHING",
	"STARCODEHEO"
}
function RedeemCode(value)
    game:GetService("ReplicatedStorage").Remotes.Redeem:InvokeServer(value)
end
for i,v in pairs(x2Code) do
    RedeemCode(v)
end
if game.PlaceId == 2753915549 then
World1 = true
elseif game.PlaceId == 4442272183 then
World2 = true
elseif game.PlaceId == 7449423635 then
World3 = true

end
local PriorityQueue = {}
if World1 then
    local Priority = {
        ["Auto Farm Saber"] = 1,
        ["Fully sphm"] = 2,
        ["Store Fruits"] = 3,
        ["Get Fruits"] = 4,
        ["Auto Farm Level"] = 5,
    }
end
function PriorityQueue:new()
    local obj = {queue = {}}
    setmetatable(obj, self)
    self.__index = self
    return obj
end
function PriorityQueue:push(element, priority)
    for i, task in ipairs(self.queue) do
        if task.element == element then
            return
        end
    end
    table.insert(self.queue, {element = element, priority = priority})
    table.sort(self.queue, function(a, b)
        return a.priority > b.priority
    end)
end
function PriorityQueue:pop(element)
    for i, task in ipairs(self.queue) do
        if task.element == element then
            return table.remove(self.queue, i)
        end
    end
end
function PriorityQueue:top()
    return self.queue[1] and self.queue[1].element
end
function PriorityQueue:empty()
    return #self.queue == 0
end
local queue = PriorityQueue:new()
local clickevent = {
"MouseButton1Click",
"MouseButton1Down",
"Activated"
};
function clickUI(path)
for i, v in pairs(clickevent) do
for i, v in pairs(getconnections(path[v])) do
    v:Function();
end;
end;
end;
pcall(function()
repeat wait()
    game:GetService("ReplicatedStorage").Effect.Container.Respawn:Destroy()
    game:GetService("ReplicatedStorage").Effect.Container.Death:Destroy()
until not game:GetService("ReplicatedStorage").Effect.Container:FindFirstChild("Death") or not game:GetService("ReplicatedStorage").Effect.Container:FindFirstChild("Respawn")
end)
if game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("ChooseTeam") then
repeat wait()
if game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Main").ChooseTeam.Visible == true then
    if _G.Team == "Pirate" then
        clickUI(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.TextButton)
    elseif _G.Team == "Marine" then
        clickUI(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Marines.Frame.TextButton)
    else
        clickUI(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Marines.Frame.TextButton)
    end
end
until game.Players.LocalPlayer.Team ~= nil and game:IsLoaded()
end
local EnemySpawns = Instance.new("Folder",workspace)
EnemySpawns.Name = "EnemySpawns"

for i, v in pairs(workspace._WorldOrigin.EnemySpawns:GetChildren()) do
if v:IsA("Part") then
    local EnemySpawnsX2 = v:Clone()
    local result = string.gsub(v.Name, "Lv. ", "")
    local result2 = string.gsub(result, "[%[%]]", "")
    local result3 = string.gsub(result2, "%d+", "")
    local result4 = string.gsub(result3, "%s+", "")
    EnemySpawnsX2.Name = result4
    EnemySpawnsX2.Parent = workspace.EnemySpawns
    EnemySpawnsX2.Anchored = true
end
end
for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
    local EnemySpawnsX2 = v.HumanoidRootPart:Clone()
    local result = string.gsub(v.Name, "Lv. ", "")
    local result2 = string.gsub(result, "[%[%]]", "")
    local result3 = string.gsub(result2, "%d+", "")
    local result4 = string.gsub(result3, "%s+", "")

    EnemySpawnsX2.Name = result4
    EnemySpawnsX2.Parent = workspace.EnemySpawns
    EnemySpawnsX2.Anchored = true
end
end
for i, v in pairs(game.ReplicatedStorage:GetChildren()) do
if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
    local EnemySpawnsX2 = v.HumanoidRootPart:Clone()
    local result = string.gsub(v.Name, "Lv. ", "")
    local result2 = string.gsub(result, "[%[%]]", "")
    local result3 = string.gsub(result2, "%d+", "")
    local result4 = string.gsub(result3, "%s+", "")

    EnemySpawnsX2.Name = result4
    EnemySpawnsX2.Parent = workspace.EnemySpawns
    EnemySpawnsX2.Anchored = true
end
end

local EnemyCDKSpawns = Instance.new("Folder", workspace)
EnemyCDKSpawns.Name = "EnemyCDKSpawns"
local processedNames = {}

for i, v in pairs(game.workspace.EnemySpawns:GetChildren()) do
local name = v.Name

if not processedNames[name] then
    processedNames[name] = true

    local existingChild = EnemyCDKSpawns:FindFirstChild(name)

    if not existingChild then
        local EnemySpawnsX2Clone = v:Clone()

        EnemySpawnsX2Clone.Parent = workspace.EnemyCDKSpawns
        EnemySpawnsX2Clone.Anchored = true
    end
end
end
local CFrame_Mobs = {
["Bandit"] = CFrame.new(1045.962646484375, 27.00250816345215, 1560.8203125),
["Monkey"] = CFrame.new(-1448.51806640625, 67.85301208496094, 11.46579647064209),
["Gorilla"] = CFrame.new(-1129.8836669921875, 40.46354675292969, -525.4237060546875),
["Pirate"] = CFrame.new(-1103.513427734375, 13.752052307128906, 3896.091064453125),
["Brute"] = CFrame.new(-1140.083740234375, 14.809885025024414, 4322.92138671875),
["Desert Bandit"] = CFrame.new(924.7998046875, 6.44867467880249, 4481.5859375),
["Desert Officer"] = CFrame.new(1608.2822265625, 8.614224433898926, 4371.00732421875),
["Snow Bandit"] = CFrame.new(1354.347900390625, 87.27277374267578, -1393.946533203125),
["Snowman"] = CFrame.new(1201.6412353515625, 144.57958984375, -1550.0670166015625),
["Chief Petty Officer"] = CFrame.new(-4881.23095703125, 22.65204429626465, 4273.75244140625),
["Sky Bandit"] = CFrame.new(-4953.20703125, 295.74420166015625, -2899.22900390625),
["Dark Master"] = CFrame.new(-5259.8447265625, 391.3976745605469, -2229.035400390625),
["Prisoner"] = CFrame.new(5098.9736328125, -0.3204058110713959, 474.2373352050781),
["Dangerous Prisoner"] = CFrame.new(5654.5634765625, 15.633401870727539, 866.2991943359375),
["Toga Warrior"] = CFrame.new(-1820.21484375, 51.68385696411133, -2740.6650390625),
["Gladiator"] = {CFrame.new(-1483, 36, -3188), CFrame.new(-1282, 36, -3059), CFrame.new(-1380, 36, -3405), CFrame.new(-1104, 36, -3260)},
["Military Soldier"] = CFrame.new(-5411.16455078125, 11.081554412841797, 8454.29296875),
["Military Spy"] = CFrame.new(-5802.8681640625, 86.26241302490234, 8828.859375),
["Fishman Warrior"] = CFrame.new(60878.30078125, 18.482830047607422, 1543.7574462890625),
["Fishman Commando"] = CFrame.new(61922.6328125, 18.482830047607422, 1493.934326171875),
["God's Guard"] = CFrame.new(-4710.04296875, 845.2769775390625, -1927.3079833984375),
["Shanda"] = CFrame.new(-7678.48974609375, 5566.40380859375, -497.2156066894531),
["Royal Squad"] = CFrame.new(-7624.25244140625, 5658.13330078125, -1467.354248046875),
["Royal Soldier"] = CFrame.new(-7836.75341796875, 5645.6640625, -1790.6236572265625),
["Galley Pirate"] = CFrame.new(5551.02197265625, 78.90135192871094, 3930.412841796875),
["Galley Captain"] = CFrame.new(5441.95166015625, 42.50205993652344, 4950.09375),
["Raider"] = CFrame.new(-728.3267211914062, 52.779319763183594, 2345.7705078125),
["Mercenary"] = CFrame.new(-1004.3244018554688, 80.15886688232422, 1424.619384765625),
["Swan Pirate"] = CFrame.new(1068.664306640625, 137.61428833007812, 1322.1060791015625),
["Factory Staff"] = CFrame.new(73.07867431640625, 81.86344146728516, -27.470672607421875),
["Marine Lieutenant"] = CFrame.new(-2821.372314453125, 75.89727783203125, -3070.089111328125),
["Marine Captain"] = CFrame.new(-1861.2310791015625, 80.17658233642578, -3254.697509765625),
["Zombie"] = CFrame.new(-5657.77685546875, 78.96973419189453, -928.68701171875),
["Vampire"] = CFrame.new(-6037.66796875, 32.18463897705078, -1340.6597900390625),
["Snow Trooper"] = CFrame.new(549.1473388671875, 427.3870544433594, -5563.69873046875),
["Winter Warrior"] = CFrame.new(1142.7451171875, 475.6398010253906, -5199.41650390625),
["Lab Subordinate"] = CFrame.new(-5707.4716796875, 15.951709747314453, -4513.39208984375),
["Horned Warrior"] = CFrame.new(-6341.36669921875, 15.951770782470703, -5723.162109375),
["Magma Ninja"] = CFrame.new(-5449.6728515625, 76.65874481201172, -5808.20068359375),
["Lava Pirate"] = CFrame.new(-5213.33154296875, 49.73788070678711, -4701.451171875),
["Ship Deckhand"] = CFrame.new(1212.0111083984375, 150.79205322265625, 33059.24609375),
["Ship Engineer"] = CFrame.new(919.4786376953125, 43.54401397705078, 32779.96875),
["Ship Steward"] = CFrame.new(919.4385375976562, 129.55599975585938, 33436.03515625),
["Ship Officer"] = CFrame.new(1036.0179443359375, 181.4390411376953, 33315.7265625),
["Arctic Warrior"] = CFrame.new(5966.24609375, 62.97002029418945, -6179.3828125),
["Snow Lurker"] = CFrame.new(5407.07373046875, 69.19437408447266, -6880.88037109375),
["Sea Soldier"] = CFrame.new(-3028.2236328125, 64.67451477050781, -9775.4267578125),
["Water Fighter"] = CFrame.new(-3352.9013671875, 285.01556396484375, -10534.841796875),
["Pirate Millionaire"] = CFrame.new(-245.9963836669922, 47.30615234375, 5584.1005859375),
["Pistol Billionaire"] = CFrame.new(-187.3301544189453, 86.23987579345703, 6013.513671875),
["Dragon Crew Warrior"] = CFrame.new(6141.140625, 51.35136413574219, -1340.738525390625),
["Dragon Crew Archer"] = CFrame.new(6616.41748046875, 441.7670593261719, 446.0469970703125),
["Female Islander"] = CFrame.new(4685.25830078125, 735.8078002929688, 815.3425903320312),
["Giant Islander"] = CFrame.new(4729.09423828125, 590.436767578125, -36.97627639770508),
["Marine Commodore"] = CFrame.new(2286.0078125, 73.13391876220703, -7159.80908203125),
["Marine Rear Admiral"] = CFrame.new(3656.773681640625, 160.52406311035156, -7001.5986328125),
["Fishman Raider"] = CFrame.new(-10407.5263671875, 331.76263427734375, -8368.5166015625),
["Fishman Captain"] = CFrame.new(-10994.701171875, 352.38140869140625, -9002.1103515625),
["Forest Pirate"] = CFrame.new(-13274.478515625, 332.3781433105469, -7769.58056640625),
["Mythological Pirate"] = CFrame.new(-13680.607421875, 501.08154296875, -6991.189453125),
["Jungle Pirate"] = CFrame.new(-12256.16015625, 331.73828125, -10485.8369140625),
["Musketeer Pirate"] = CFrame.new(-13457.904296875, 391.545654296875, -9859.177734375),
["Reborn Skeleton"] = CFrame.new(-8763.7236328125, 165.72299194335938, 6159.86181640625),
["Living Zombie"] = CFrame.new(-10144.1318359375, 138.62667846679688, 5838.0888671875),
["Demonic Soul"] = CFrame.new(-9505.8720703125, 172.10482788085938, 6158.9931640625),
["Posessed Mummy"] = CFrame.new(-9582.0224609375, 6.251527309417725, 6205.478515625),
["Peanut Scout"] = CFrame.new(-2143.241943359375, 47.72198486328125, -10029.9951171875),
["Peanut President"] = CFrame.new(-1859.35400390625, 38.10316848754883, -10422.4296875),
["Ice Cream Chef"] = CFrame.new(-872.24658203125, 65.81957244873047, -10919.95703125),
["Ice Cream Commander"] = CFrame.new(-558.06103515625, 112.04895782470703, -11290.7744140625),
["Cookie Crafter"] = CFrame.new(-2374.13671875, 37.79826354980469, -12125.30859375),
["Cake Guard"] = CFrame.new(-1598.3070068359375, 43.773197174072266, -12244.5810546875),
["Baking Staff"] = CFrame.new(-1887.8099365234375, 77.6185073852539, -12998.3505859375),
["Head Baker"] = CFrame.new(-2216.188232421875, 82.884521484375, -12869.2939453125),
["Cocoa Warrior"] = CFrame.new(-21.55328369140625, 80.57499694824219, -12352.3876953125),
["Chocolate Bar Battler"] = CFrame.new(582.590576171875, 77.18809509277344, -12463.162109375),
["Sweet Thief"] = CFrame.new(165.1884765625, 76.05885314941406, -12600.8369140625),
["Candy Rebel"] = CFrame.new(134.86563110351562, 77.2476806640625, -12876.5478515625),
["Candy Pirate"] = CFrame.new(-1310.5003662109375, 26.016523361206055, -14562.404296875),
["Isle Outlaw"] = CFrame.new(-16479.900390625, 226.6117401123047, -300.3114318847656),
["Island Boy"] = CFrame.new(-16849.396484375, 192.86505126953125, -150.7853240966797),
["Sun-kissed Warrior"] = CFrame.new(-16347, 64, 984),
["Isle Champion"] = CFrame.new(-16602.1015625, 130.38734436035156, 1087.24560546875)
}
local function CheckQuest()
local Level = game:GetService("Players").LocalPlayer.Data.Level.Value
local NameMob = nil
local QuestNumber = nil
local NameQuest = nil
local CFrameMon = nil
local CFrameQuest = nil
local LevelReq = -999
local RNameMob = nil
local Quests = require(game:GetService("ReplicatedStorage").Quests)
local GuideModule = require(game:GetService("ReplicatedStorage").GuideModule)
local MaxLevelReqCurrentSea = -999
for i,v in pairs(Quests) do
for i1,v1 in pairs(v) do
    if i ~= "CitizenQuest" and i ~= "BartiloQuest" and v1["LevelReq"] <= Level then
        for i2,v2 in pairs(v1["Task"]) do
            if v2 ~= 1 then
                LevelReq = math.max(LevelReq, v1["LevelReq"])
            end
        end
    end
end
end
for i,v in pairs(Quests) do
for i1,v1 in pairs(v) do
    if i ~= "CitizenQuest" and i ~= "BartiloQuest" and v1["LevelReq"] == LevelReq then
        for i2,v2 in pairs(v1["Task"]) do
            RNameMob = i2 .. " [Lv. ".. v1["LevelReq"] .. "]"
            NameMob = i2
            QuestNumber = i1
            NameQuest = i
        end
    end
end
end
for a,b in pairs(GuideModule["Data"]["NPCList"]) do
for c,d in pairs(b["Levels"]) do
    if LevelReq == d then
        CFrameQuest = a["CFrame"]
    end
    MaxLevelReqCurrentSea = math.max(d, MaxLevelReqCurrentSea)
end
end
if not CFrameMon then
pcall(function()
    CFrameMon = CFrame.new(game:GetService("ReplicatedStorage"):FindFirstChild(NameMob).WorldPivot.Position) * CFrame.new(0, 30, 0)
end)
end
if not CFrameMon then
pcall(function()
    CFrameMon = game:GetService("Workspace").Enemies:FindFirstChild(NameMob):FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 30, 0)
end)
end
if not CFrameMon then
pcall(function()
    CFrameMon = game:GetService("Workspace")._WorldOrigin:FindFirstChild("EnemySpawns"):FindFirstChild(RNameMob).CFrame * CFrame.new(0, 30, 0)
end)
end
if not CFrameMon then
if NameMob == "Gladiator" then
    local List = CFrame_Mobs[NameMob]
    CFrameMon = List[math.random(1, #List)]
else
    CFrameMon = CFrame_Mobs[NameMob]
end
end
if CFrameQuest == nil then
LevelReq = -999
CFrameMon = nil
for i,v in pairs(Quests) do
    for i1,v1 in pairs(v) do
        if i ~= "CitizenQuest" and i ~= "BartiloQuest" and v1["LevelReq"] <= MaxLevelReqCurrentSea then
            for i2,v2 in pairs(v1["Task"]) do
                if v2 ~= 1 then
                    LevelReq = math.max(LevelReq, v1["LevelReq"])
                end
            end
        end
    end
end
for i,v in pairs(Quests) do
    for i1,v1 in pairs(v) do
        if i ~= "CitizenQuest" and i ~= "BartiloQuest" and v1["LevelReq"] == LevelReq then
            for i2,v2 in pairs(v1["Task"]) do
                RNameMob = i2 .. " [Lv. ".. v1["LevelReq"] .. "]"
                NameMob = i2
                QuestNumber = i1
                NameQuest = i
            end
        end
    end
end
for a,b in pairs(GuideModule["Data"]["NPCList"]) do
    for c,d in pairs(b["Levels"]) do
        if LevelReq == d then
            CFrameQuest = a["CFrame"]
        end
    end
end
if not CFrameMon then
    pcall(function()
        CFrameMon = CFrame.new(game:GetService("ReplicatedStorage"):FindFirstChild(NameMob).WorldPivot.Position) * CFrame.new(0, 30, 0)
    end)
end
if not CFrameMon then
    pcall(function()
        CFrameMon = game:GetService("Workspace").Enemies:FindFirstChild(NameMob):FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 30, 0)
    end)
end
if not CFrameMon then
    pcall(function()
        CFrameMon = game:GetService("Workspace")._WorldOrigin:FindFirstChild("EnemySpawns"):FindFirstChild(RNameMob).CFrame * CFrame.new(0, 30, 0)
    end)
end
if not CFrameMon then
    if NameMob == "Gladiator" then
        local List = CFrame_Mobs[NameMob]
        CFrameMon = List[math.random(1, #List)]
    else
        CFrameMon = CFrame_Mobs[NameMob]
    end
end
end
return {
[1] = NameQuest,
[2] = QuestNumber,
[3] = CFrameQuest,
[4] = NameMob,
[5] = CFrameMon,
[6] = LevelReq,
}
end
local function QuestCheck()
local Lvl = game:GetService("Players").LocalPlayer.Data.Level.Value
if Lvl >= 1 and Lvl <= 9 then
if tostring(game.Players.LocalPlayer.Team) == "Marines" then
    MobName = "Trainee"
    QuestName = "MarineQuest"
    QuestLevel = 1
    Mon = "Trainee"
    NPCPosition = CFrame.new(-2709.67944, 24.5206585, 2104.24585, -0.744724929, -3.97967455e-08, -0.667371571, 4.32403588e-08, 1, -1.07884304e-07, 0.667371571, -1.09201515e-07, -0.744724929)
elseif tostring(game.Players.LocalPlayer.Team) == "Pirates" then
    MobName = "Bandit"
    Mon = "Bandit"
    QuestName = "BanditQuest1"
    QuestLevel = 1
    NPCPosition = CFrame.new(1059.99731, 16.9222069, 1549.28162, -0.95466274, 7.29721794e-09, 0.297689587, 1.05190106e-08, 1, 9.22064114e-09, -0.297689587, 1.19340022e-08, -0.95466274)
end
return {
    [1] = QuestLevel,
    [2] = NPCPosition,
    [3] = MobName,
    [4] = QuestName,
    [5] = LevelRequire,
    [6] = Mon,
    [7] = MobCFrame
}
end

if Lvl >= 210 and Lvl <= 249 then
MobName = "Dangerous Prisoner"
QuestName = "PrisonerQuest"
QuestLevel = 2
Mon = "Dangerous Prisoner"
NPCPosition = CFrame.new(5308.93115, 1.65517521, 475.120514, -0.0894274712, -5.00292918e-09, -0.995993316, 1.60817859e-09, 1, -5.16744869e-09, 0.995993316, -2.06384709e-09, -0.0894274712)
local matchingCFrames = {}
local result = string.gsub(MobName, "Lv. ", "")
local result2 = string.gsub(result, "[%[%]]", "")
local result3 = string.gsub(result2, "%d+", "")
local result4 = string.gsub(result3, "%s+", "")

for i,v in pairs(game.workspace.EnemySpawns:GetChildren()) do
    if v.Name == result4 then
        table.insert(matchingCFrames, v.CFrame)
    end
    MobCFrame = matchingCFrames
end
return {
    [1] = QuestLevel,
    [2] = NPCPosition,
    [3] = MobName,
    [4] = QuestName,
    [5] = LevelRequire,
    [6] = Mon,
    [7] = MobCFrame
}
end

--game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163.8515625, 11.6796875, 1819.7841796875))
local GuideModule = require(game:GetService("ReplicatedStorage").GuideModule)
local Quests = require(game:GetService("ReplicatedStorage").Quests)
for i,v in pairs(GuideModule["Data"]["NPCList"]) do
for i1,v1 in pairs(v["Levels"]) do
    if Lvl >= v1 then
        if not LevelRequire then
            LevelRequire = 0
        end
        if v1 > LevelRequire then
            NPCPosition = i["CFrame"]
            QuestLevel = i1
            LevelRequire = v1
        end
        if #v["Levels"] == 3 and QuestLevel == 3 then
            NPCPosition = i["CFrame"]
            QuestLevel = 2
            LevelRequire = v["Levels"][2]
        end
    end
end
end
if Lvl >= 375 and Lvl <= 399 then -- Fishman Warrior
if queue:top() == "Auto Farm Level" and (NPCPosition.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 3000 then
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163.8515625, 11.6796875, 1819.7841796875))
end
end

if Lvl >= 400 and Lvl <= 449 then -- Fishman Commando
if queue:top() == "Auto Farm Level" and (NPCPosition.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude > 3000 then
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(61163.8515625, 11.6796875, 1819.7841796875))
end
end
for i,v in pairs(Quests) do
for i1,v1 in pairs(v) do
    if v1["LevelReq"] == LevelRequire and i ~= "CitizenQuest" then
        QuestName = i
        for i2,v2 in pairs(v1["Task"]) do
            MobName = i2
            Mon = string.split(i2," [Lv. ".. v1["LevelReq"] .. "]")[1]
        end
    end
end
end
if QuestName == "MarineQuest2" then
QuestName = "MarineQuest2"
QuestLevel = 1
MobName = "Chief Petty Officer"
Mon = "Chief Petty Officer"
LevelRequire = 120
elseif QuestName == "ImpelQuest" then
QuestName = "PrisonerQuest"
QuestLevel = 2
MobName = "Dangerous Prisoner"
Mon = "Dangerous Prisoner"
LevelRequire = 210
NPCPosition = CFrame.new(5310.60547, 0.350014925, 474.946594, 0.0175017118, 0, 0.999846935, 0, 1, 0, -0.999846935, 0, 0.0175017118)
elseif QuestName == "SkyExp1Quest" then
if QuestLevel == 1 then
    NPCPosition = CFrame.new(-4721.88867, 843.874695, -1949.96643, 0.996191859, -0, -0.0871884301, 0, 1, -0, 0.0871884301, 0, 0.996191859)
elseif QuestLevel == 2 then
    NPCPosition = CFrame.new(-7859.09814, 5544.19043, -381.476196, -0.422592998, 0, 0.906319618, 0, 1, 0, -0.906319618, 0, -0.422592998)
end
elseif QuestName == "Area2Quest" and QuestLevel == 2 then
QuestName = "Area2Quest"
QuestLevel = 1
MobName = "Swan Pirate"
Mon = "Swan Pirate"
LevelRequire = 775
end
MobName = MobName:sub(1,#MobName)
if not MobName:find("Lv") then
for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
    MonLV = string.match(v.Name, "%d+")
    if v.Name:find(MobName) and #v.Name > #MobName and tonumber(MonLV) <= Lvl + 50 then
        MobName = v.Name
    end
end
end
if not MobName:find("Lv") then
for i,v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
    MonLV = string.match(v.Name, "%d+")
    if v.Name:find(MobName) and #v.Name > #MobName and tonumber(MonLV) <= Lvl + 50 then
        MobName = v.Name
        Mon = a
    end
end
end

local matchingCFrames = {}
local result = string.gsub(MobName, "Lv. ", "")
local result2 = string.gsub(result, "[%[%]]", "")
local result3 = string.gsub(result2, "%d+", "")
local result4 = string.gsub(result3, "%s+", "")

for i,v in pairs(game.workspace.EnemySpawns:GetChildren()) do
if v.Name == result4 then
    table.insert(matchingCFrames, v.CFrame)
else
    table.insert(matchingCFrames, nil)
end
MobCFrame = matchingCFrames
end

return {
[1] = QuestLevel,
[2] = NPCPosition,
[3] = MobName,
[4] = QuestName,
[5] = LevelRequire,
[6] = Mon,
[7] = MobCFrame,
[8] = MonQ,
[9] = MobCFrameNuber
}
end
function Hop()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
function TPReturner()
local Site;
if foundAnything == "" then
    Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
else
    Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
end
local ID = ""
if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
    foundAnything = Site.nextPageCursor
end
local num = 0;
for i,v in pairs(Site.data) do
    local Possible = true
    ID = tostring(v.id)
    if tonumber(v.maxPlayers) > tonumber(v.playing) then
        for _,Existing in pairs(AllIDs) do
            if num ~= 0 then
                if ID == tostring(Existing) then
                    Possible = false
                end
            else
                if tonumber(actualHour) ~= tonumber(Existing) then
                    local delFile = pcall(function()
                        AllIDs = {}
                        table.insert(AllIDs, actualHour)
                    end)
                end
            end
            num = num + 1
        end
        if Possible == true then
            table.insert(AllIDs, ID)
            wait()
            pcall(function()
                wait()
                game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
            end)
            wait(4)
        end
    end
end
end
function Teleport() 
while wait() do
    pcall(function()
        TPReturner()
        if foundAnything ~= "" then
            TPReturner()
        end
    end)
end
end
Teleport()
end       

function UpdateIslandESP() 
for i,v in pairs(game:GetService("Workspace")["_WorldOrigin"].Locations:GetChildren()) do
pcall(function()
    if IslandESP then 
        if v.Name ~= "Sea" then
            if not v:FindFirstChild('NameEsp') then
                local bill = Instance.new('BillboardGui',v)
                bill.Name = 'NameEsp'
                bill.ExtentsOffset = Vector3.new(0, 1, 0)
                bill.Size = UDim2.new(1,200,1,30)
                bill.Adornee = v
                bill.AlwaysOnTop = true
                local name = Instance.new('TextLabel',bill)
                name.Font = "GothamBold"
                name.FontSize = "Size14"
                name.TextWrapped = true
                name.Size = UDim2.new(1,0,1,0)
                name.TextYAlignment = 'Top'
                name.BackgroundTransparency = 1
                name.TextStrokeTransparency = 0.5
                name.TextColor3 = Color3.fromRGB(7, 236, 240)
            else
                v['NameEsp'].TextLabel.Text = (v.Name ..'   \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) ..' Distance')
            end
        end
    else
        if v:FindFirstChild('NameEsp') then
            v:FindFirstChild('NameEsp'):Destroy()
        end
    end
end)
end
end

function isnil(thing)
return (thing == nil)
end
local function round(n)
return math.floor(tonumber(n) + 0.5)
end
Number = math.random(1, 1000000)
function UpdatePlayerChams()
for i,v in pairs(game:GetService'Players':GetChildren()) do
pcall(function()
    if not isnil(v.Character) then
        if ESPPlayer then
            if not isnil(v.Character.Head) and not v.Character.Head:FindFirstChild('NameEsp'..Number) then
                local bill = Instance.new('BillboardGui',v.Character.Head)
                bill.Name = 'NameEsp'..Number
                bill.ExtentsOffset = Vector3.new(0, 1, 0)
                bill.Size = UDim2.new(1,200,1,30)
                bill.Adornee = v.Character.Head
                bill.AlwaysOnTop = true
                local name = Instance.new('TextLabel',bill)
                name.Font = Enum.Font.GothamSemibold
                name.FontSize = "Size14"
                name.TextWrapped = true
                name.Text = (v.Name ..' \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Character.Head.Position).Magnitude/3) ..' Distance')
                name.Size = UDim2.new(1,0,1,0)
                name.TextYAlignment = 'Top'
                name.BackgroundTransparency = 1
                name.TextStrokeTransparency = 0.5
                if v.Team == game.Players.LocalPlayer.Team then
                    name.TextColor3 = Color3.new(0,255,0)
                else
                    name.TextColor3 = Color3.new(255,0,0)
                end
            else
                v.Character.Head['NameEsp'..Number].TextLabel.Text = (v.Name ..' | '.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Character.Head.Position).Magnitude/3) ..' Distance\nHealth : ' .. round(v.Character.Humanoid.Health*100/v.Character.Humanoid.MaxHealth) .. '%')
            end
        else
            if v.Character.Head:FindFirstChild('NameEsp'..Number) then
                v.Character.Head:FindFirstChild('NameEsp'..Number):Destroy()
            end
        end
    end
end)
end
end
function UpdateChestChams() 
for i,v in pairs(game.Workspace:GetChildren()) do
pcall(function()
    if string.find(v.Name,"Chest") then
        if ChestESP then
            if string.find(v.Name,"Chest") then
                if not v:FindFirstChild('NameEsp'..Number) then
                    local bill = Instance.new('BillboardGui',v)
                    bill.Name = 'NameEsp'..Number
                    bill.ExtentsOffset = Vector3.new(0, 1, 0)
                    bill.Size = UDim2.new(1,200,1,30)
                    bill.Adornee = v
                    bill.AlwaysOnTop = true
                    local name = Instance.new('TextLabel',bill)
                    name.Font = Enum.Font.GothamSemibold
                    name.FontSize = "Size14"
                    name.TextWrapped = true
                    name.Size = UDim2.new(1,0,1,0)
                    name.TextYAlignment = 'Top'
                    name.BackgroundTransparency = 1
                    name.TextStrokeTransparency = 0.5
                    if v.Name == "Chest1" then
                        name.TextColor3 = Color3.fromRGB(109, 109, 109)
                        name.Text = ("Chest 1" ..' \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) ..' Distance')
                    end
                    if v.Name == "Chest2" then
                        name.TextColor3 = Color3.fromRGB(173, 158, 21)
                        name.Text = ("Chest 2" ..' \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) ..' Distance')
                    end
                    if v.Name == "Chest3" then
                        name.TextColor3 = Color3.fromRGB(85, 255, 255)
                        name.Text = ("Chest 3" ..' \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) ..' Distance')
                    end
                else
                    v['NameEsp'..Number].TextLabel.Text = (v.Name ..'   \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) ..' Distance')
                end
            end
        else
            if v:FindFirstChild('NameEsp'..Number) then
                v:FindFirstChild('NameEsp'..Number):Destroy()
            end
        end
    end
end)
end
end
function UpdateDevilChams() 
for i,v in pairs(game.Workspace:GetChildren()) do
pcall(function()
    if DevilFruitESP then
        if string.find(v.Name, "Fruit") then   
            if not v.Handle:FindFirstChild('NameEsp'..Number) then
                local bill = Instance.new('BillboardGui',v.Handle)
                bill.Name = 'NameEsp'..Number
                bill.ExtentsOffset = Vector3.new(0, 1, 0)
                bill.Size = UDim2.new(1,200,1,30)
                bill.Adornee = v.Handle
                bill.AlwaysOnTop = true
                local name = Instance.new('TextLabel',bill)
                name.Font = Enum.Font.GothamSemibold
                name.FontSize = "Size14"
                name.TextWrapped = true
                name.Size = UDim2.new(1,0,1,0)
                name.TextYAlignment = 'Top'
                name.BackgroundTransparency = 1
                name.TextStrokeTransparency = 0.5
                name.TextColor3 = Color3.fromRGB(255, 255, 255)
                name.Text = (v.Name ..' \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Handle.Position).Magnitude/3) ..' Distance')
            else
                v.Handle['NameEsp'..Number].TextLabel.Text = (v.Name ..'   \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Handle.Position).Magnitude/3) ..' Distance')
            end
        end
    else
        if v.Handle:FindFirstChild('NameEsp'..Number) then
            v.Handle:FindFirstChild('NameEsp'..Number):Destroy()
        end
    end
end)
end
end
function UpdateFlowerChams() 
for i,v in pairs(game.Workspace:GetChildren()) do
pcall(function()
    if v.Name == "Flower2" or v.Name == "Flower1" then
        if FlowerESP then 
            if not v:FindFirstChild('NameEsp'..Number) then
                local bill = Instance.new('BillboardGui',v)
                bill.Name = 'NameEsp'..Number
                bill.ExtentsOffset = Vector3.new(0, 1, 0)
                bill.Size = UDim2.new(1,200,1,30)
                bill.Adornee = v
                bill.AlwaysOnTop = true
                local name = Instance.new('TextLabel',bill)
                name.Font = Enum.Font.GothamSemibold
                name.FontSize = "Size14"
                name.TextWrapped = true
                name.Size = UDim2.new(1,0,1,0)
                name.TextYAlignment = 'Top'
                name.BackgroundTransparency = 1
                name.TextStrokeTransparency = 0.5
                name.TextColor3 = Color3.fromRGB(255, 0, 0)
                if v.Name == "Flower1" then 
                    name.Text = ("Blue Flower" ..' \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) ..' Distance')
                    name.TextColor3 = Color3.fromRGB(0, 0, 255)
                end
                if v.Name == "Flower2" then
                    name.Text = ("Red Flower" ..' \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) ..' Distance')
                    name.TextColor3 = Color3.fromRGB(255, 0, 0)
                end
            else
                v['NameEsp'..Number].TextLabel.Text = (v.Name ..'   \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) ..' Distance')
            end
        else
            if v:FindFirstChild('NameEsp'..Number) then
            v:FindFirstChild('NameEsp'..Number):Destroy()
            end
        end
    end   
end)
end
end
function UpdateRealFruitChams() 
for i,v in pairs(game.Workspace.AppleSpawner:GetChildren()) do
if v:IsA("Tool") then
    if RealFruitESP then 
        if not v.Handle:FindFirstChild('NameEsp'..Number) then
            local bill = Instance.new('BillboardGui',v.Handle)
            bill.Name = 'NameEsp'..Number
            bill.ExtentsOffset = Vector3.new(0, 1, 0)
            bill.Size = UDim2.new(1,200,1,30)
            bill.Adornee = v.Handle
            bill.AlwaysOnTop = true
            local name = Instance.new('TextLabel',bill)
            name.Font = Enum.Font.GothamSemibold
            name.FontSize = "Size14"
            name.TextWrapped = true
            name.Size = UDim2.new(1,0,1,0)
            name.TextYAlignment = 'Top'
            name.BackgroundTransparency = 1
            name.TextStrokeTransparency = 0.5
            name.TextColor3 = Color3.fromRGB(255, 0, 0)
            name.Text = (v.Name ..' \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Handle.Position).Magnitude/3) ..' Distance')
        else
            v.Handle['NameEsp'..Number].TextLabel.Text = (v.Name ..' '.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Handle.Position).Magnitude/3) ..' Distance')
        end
    else
        if v.Handle:FindFirstChild('NameEsp'..Number) then
            v.Handle:FindFirstChild('NameEsp'..Number):Destroy()
        end
    end 
end
end
for i,v in pairs(game.Workspace.PineappleSpawner:GetChildren()) do
if v:IsA("Tool") then
    if RealFruitESP then 
        if not v.Handle:FindFirstChild('NameEsp'..Number) then
            local bill = Instance.new('BillboardGui',v.Handle)
            bill.Name = 'NameEsp'..Number
            bill.ExtentsOffset = Vector3.new(0, 1, 0)
            bill.Size = UDim2.new(1,200,1,30)
            bill.Adornee = v.Handle
            bill.AlwaysOnTop = true
            local name = Instance.new('TextLabel',bill)
            name.Font = Enum.Font.GothamSemibold
            name.FontSize = "Size14"
            name.TextWrapped = true
            name.Size = UDim2.new(1,0,1,0)
            name.TextYAlignment = 'Top'
            name.BackgroundTransparency = 1
            name.TextStrokeTransparency = 0.5
            name.TextColor3 = Color3.fromRGB(255, 174, 0)
            name.Text = (v.Name ..' \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Handle.Position).Magnitude/3) ..' Distance')
        else
            v.Handle['NameEsp'..Number].TextLabel.Text = (v.Name ..' '.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Handle.Position).Magnitude/3) ..' Distance')
        end
    else
        if v.Handle:FindFirstChild('NameEsp'..Number) then
            v.Handle:FindFirstChild('NameEsp'..Number):Destroy()
        end
    end 
end
end
for i,v in pairs(game.Workspace.BananaSpawner:GetChildren()) do
if v:IsA("Tool") then
    if RealFruitESP then 
        if not v.Handle:FindFirstChild('NameEsp'..Number) then
            local bill = Instance.new('BillboardGui',v.Handle)
            bill.Name = 'NameEsp'..Number
            bill.ExtentsOffset = Vector3.new(0, 1, 0)
            bill.Size = UDim2.new(1,200,1,30)
            bill.Adornee = v.Handle
            bill.AlwaysOnTop = true
            local name = Instance.new('TextLabel',bill)
            name.Font = Enum.Font.GothamSemibold
            name.FontSize = "Size14"
            name.TextWrapped = true
            name.Size = UDim2.new(1,0,1,0)
            name.TextYAlignment = 'Top'
            name.BackgroundTransparency = 1
            name.TextStrokeTransparency = 0.5
            name.TextColor3 = Color3.fromRGB(251, 255, 0)
            name.Text = (v.Name ..' \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Handle.Position).Magnitude/3) ..' Distance')
        else
            v.Handle['NameEsp'..Number].TextLabel.Text = (v.Name ..' '.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Handle.Position).Magnitude/3) ..' Distance')
        end
    else
        if v.Handle:FindFirstChild('NameEsp'..Number) then
            v.Handle:FindFirstChild('NameEsp'..Number):Destroy()
        end
    end 
end
end
end

spawn(function()
while wait() do
pcall(function()
    if MobESP then
        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
            if v:FindFirstChild('HumanoidRootPart') then
                if not v:FindFirstChild("MobEap") then
                    local BillboardGui = Instance.new("BillboardGui")
                    local TextLabel = Instance.new("TextLabel")

                    BillboardGui.Parent = v
                    BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                    BillboardGui.Active = true
                    BillboardGui.Name = "MobEap"
                    BillboardGui.AlwaysOnTop = true
                    BillboardGui.LightInfluence = 1.000
                    BillboardGui.Size = UDim2.new(0, 200, 0, 50)
                    BillboardGui.StudsOffset = Vector3.new(0, 2.5, 0)

                    TextLabel.Parent = BillboardGui
                    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    TextLabel.BackgroundTransparency = 1.000
                    TextLabel.Size = UDim2.new(0, 200, 0, 50)
                    TextLabel.Font = Enum.Font.GothamBold
                    TextLabel.TextColor3 = Color3.fromRGB(7, 236, 240)
                    TextLabel.Text.Size = 35
                end
                local Dis = math.floor((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude)
                v.MobEap.TextLabel.Text = v.Name.." - "..Dis.." Distance"
            end
        end
    else
        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
            if v:FindFirstChild("MobEap") then
                v.MobEap:Destroy()
            end
        end
    end
end)
end
end)
task.spawn(function()
while wait() do
    for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do  
        if v:IsA("Tool") then
            if v:FindFirstChild("RemoteFunctionShoot") then 
                _G.SelectWeaponGun = v.Name
            end
        end
    end
end
end)

local function CheckMaterial(v1)
if World1 then 
    if (v1=="Magma Ore") then 
        MaterialMob={"Military Soldier ","Military Spy"};
        CFrameMon=CFrame.new( -5815,84,8820);
    elseif ((v1=="Leather") or (v1=="Scrap Metal")) then 
        MaterialMob={"Brute"};
        CFrameMon=CFrame.new( -1145,15,4350);
    elseif (v1=="Angel Wings") then 
        MaterialMob={"God's Guard"};
        CFrameMon=CFrame.new( -4698,845, -1912);
    elseif (v1=="Fish Tail") then 
        MaterialMob={"Fishman Warrior","Fishman Commando"};
        CFrameMon=CFrame.new(61123,19,1569);
    end 
end 
if World2 then 
    if (v1=="Magma Ore") then 
        MaterialMob={"Magma Ninja"};
        CFrameMon=CFrame.new( -5428,78, -5959);
    elseif (v1=="Scrap Metal") then
        MaterialMob={"Swan Pirate"};
        CFrameMon=CFrame.new(878,122,1235);
    elseif (v1=="Radioactive Material") then 
        MaterialMob={"Factory Staff"};
        CFrameMon=CFrame.new(295,73, -56);
    elseif (v1=="Vampire Fang") then 
        MaterialMob={"Vampire"};
        CFrameMon=CFrame.new( -6033,7, -1317);
    elseif (v1=="Mystic Droplet") then 
        MaterialMob={"Water Fighter","Sea Soldier"};
        CFrameMon=CFrame.new( -3385,239, -10542);
    end 
end 
if World3 then 
    if (v1=="Mini Tusk") then 
        MaterialMob={"Mythological Pirate"};
        CFrameMon=CFrame.new( -13545,470, -6917);
    elseif (v1=="Fish Tail") then 
        MaterialMob={"Fishman Raider","Fishman Captain"};
        CFrameMon=CFrame.new( -10993,332, -8940);
    elseif (v1=="Scrap Metal") then 
        MaterialMob={"Jungle Pirate"};
        CFrameMon=CFrame.new( -12107,332, -10549);
    elseif (v1=="Dragon Scale") then 
        MaterialMob={"Dragon Crew Archer","Dragon Crew Warrior"};
        CFrameMon=CFrame.new(6594,383,139);
    elseif (v1=="Conjured Cocoa") then 
        MaterialMob={"Cocoa Warrior","Chocolate Bar Battler","Sweet Thief","Candy Rebel"};
        CFrameMon=CFrame.new(620.6344604492188,78.93644714355469, -12581.369140625);
    elseif (v1=="Demonic Wisp") then MaterialMob={"Demonic Soul"};
        CFrameMon=CFrame.new( -9507,172,6158);
    elseif (v1=="Gunpowder") then MaterialMob={"Pistol Billionaire"};
        CFrameMon=CFrame.new( -469,74,5904);
    end 
end 
end
function InMyNetWork(object)
    if isnetworkowner then
        return isnetworkowner(object)
    else
        if (object.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 200 then 
            return true
        end
        return false
    end
end
local function CustomFindFirstChild(tablename)
    for i,v in pairs(tablename) do
        if game:GetService("Workspace").Enemies:FindFirstChild(v) then
            return true
        end
    end
return false
end
spawn(function()
while wait() do
pcall(function()
    if SeaESP then
        for i,v in pairs(game:GetService("Workspace").SeaBeasts:GetChildren()) do
            if v:FindFirstChild('HumanoidRootPart') then
                if not v:FindFirstChild("Seaesps") then
                    local BillboardGui = Instance.new("BillboardGui")
                    local TextLabel = Instance.new("TextLabel")

                    BillboardGui.Parent = v
                    BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                    BillboardGui.Active = true
                    BillboardGui.Name = "Seaesps"
                    BillboardGui.AlwaysOnTop = true
                    BillboardGui.LightInfluence = 1.000
                    BillboardGui.Size = UDim2.new(0, 200, 0, 50)
                    BillboardGui.StudsOffset = Vector3.new(0, 2.5, 0)

                    TextLabel.Parent = BillboardGui
                    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    TextLabel.BackgroundTransparency = 1.000
                    TextLabel.Size = UDim2.new(0, 200, 0, 50)
                    TextLabel.Font = Enum.Font.GothamBold
                    TextLabel.TextColor3 = Color3.fromRGB(7, 236, 240)
                    TextLabel.Text.Size = 35
                end
                local Dis = math.floor((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude)
                v.Seaesps.TextLabel.Text = v.Name.." - "..Dis.." Distance"
            end
        end
    else
        for i,v in pairs (game:GetService("Workspace").SeaBeasts:GetChildren()) do
            if v:FindFirstChild("Seaesps") then
                v.Seaesps:Destroy()
            end
        end
    end
end)
end
end)

spawn(function()
while wait() do
pcall(function()
    if NpcESP then
        for i,v in pairs(game:GetService("Workspace").NPCs:GetChildren()) do
            if v:FindFirstChild('HumanoidRootPart') then
                if not v:FindFirstChild("NpcEspes") then
                    local BillboardGui = Instance.new("BillboardGui")
                    local TextLabel = Instance.new("TextLabel")

                    BillboardGui.Parent = v
                    BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                    BillboardGui.Active = true
                    BillboardGui.Name = "NpcEspes"
                    BillboardGui.AlwaysOnTop = true
                    BillboardGui.LightInfluence = 1.000
                    BillboardGui.Size = UDim2.new(0, 200, 0, 50)
                    BillboardGui.StudsOffset = Vector3.new(0, 2.5, 0)

                    TextLabel.Parent = BillboardGui
                    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    TextLabel.BackgroundTransparency = 1.000
                    TextLabel.Size = UDim2.new(0, 200, 0, 50)
                    TextLabel.Font = Enum.Font.GothamBold
                    TextLabel.TextColor3 = Color3.fromRGB(7, 236, 240)
                    TextLabel.Text.Size = 35
                end
                local Dis = math.floor((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude)
                v.NpcEspes.TextLabel.Text = v.Name.." - "..Dis.." Distance"
            end
        end
    else
        for i,v in pairs (game:GetService("Workspace").NPCs:GetChildren()) do
            if v:FindFirstChild("NpcEspes") then
                v.NpcEspes:Destroy()
            end
        end
    end
end)
end
end)

function isnil(thing)
return (thing == nil)
end
local function round(n)
return math.floor(tonumber(n) + 0.5)
end
Number = math.random(1, 1000000)

function UpdateIslandMirageESP() 
for i,v in pairs(game:GetService("Workspace")["_WorldOrigin"].Locations:GetChildren()) do
pcall(function()
    if MirageIslandESP then 
        if v.Name == "Mirage Island" then
            if not v:FindFirstChild('NameEsp') then
                local bill = Instance.new('BillboardGui',v)
                bill.Name = 'NameEsp'
                bill.ExtentsOffset = Vector3.new(0, 1, 0)
                bill.Size = UDim2.new(1,200,1,30)
                bill.Adornee = v
                bill.AlwaysOnTop = true
                local name = Instance.new('TextLabel',bill)
                name.Font = "Code"
                name.FontSize = "Size14"
                name.TextWrapped = true
                name.Size = UDim2.new(1,0,1,0)
                name.TextYAlignment = 'Top'
                name.BackgroundTransparency = 1
                name.TextStrokeTransparency = 0.5
                name.TextColor3 = Color3.fromRGB(80, 245, 245)
            else
                v['NameEsp'].TextLabel.Text = (v.Name ..'   \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) ..' M')
            end
        end
    else
        if v:FindFirstChild('NameEsp') then
            v:FindFirstChild('NameEsp'):Destroy()
        end
    end
end)
end
end
function GetFightingStyle(Style)
ReturnText = ""
for i ,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
    if v:IsA("Tool") then
        if v.ToolTip == Style then
            ReturnText = v.Name
        end
    end
end
for i ,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
    if v:IsA("Tool") then
        if v.ToolTip == Style then
            ReturnText = v.Name
        end
    end
end
if ReturnText ~= "" then
    return ReturnText
else
    return "Not Have"
end
end
function isnil(thing)
return (thing == nil)
end
local function round(n)
return math.floor(tonumber(n) + 0.5)
end
Number = math.random(1, 1000000)

function UpdateAfdESP() 
for i,v in pairs(game:GetService("Workspace").NPCs:GetChildren()) do
pcall(function()
    if AfdESP then 
        if v.Name == "Advanced Fruit Dealer" then
            if not v:FindFirstChild('NameEsp') then
                local bill = Instance.new('BillboardGui',v)
                bill.Name = 'NameEsp'
                bill.ExtentsOffset = Vector3.new(0, 1, 0)
                bill.Size = UDim2.new(1,200,1,30)
                bill.Adornee = v
                bill.AlwaysOnTop = true
                local name = Instance.new('TextLabel',bill)
                name.Font = "Code"
                name.FontSize = "Size14"
                name.TextWrapped = true
                name.Size = UDim2.new(1,0,1,0)
                name.TextYAlignment = 'Top'
                name.BackgroundTransparency = 1
                name.TextStrokeTransparency = 0.5
                name.TextColor3 = Color3.fromRGB(80, 245, 245)
            else
                v['NameEsp'].TextLabel.Text = (v.Name ..'   \n'.. round((game:GetService('Players').LocalPlayer.Character.Head.Position - v.Position).Magnitude/3) ..' M')
            end
        end
    else
        if v:FindFirstChild('NameEsp') then
            v:FindFirstChild('NameEsp'):Destroy()
        end
    end
end)
end
end


function CheckMasteryWeapon(NameWe,MasNum)
if game.Players.LocalPlayer.Backpack:FindFirstChild(NameWe) then
    if tonumber(game.Players.LocalPlayer.Backpack:FindFirstChild(NameWe).Level.Value) < tonumber(MasNum) then
        return "true DownTo"
    elseif tonumber(game.Players.LocalPlayer.Backpack:FindFirstChild(NameWe).Level.Value) >= tonumber(MasNum) then
        return "true UpTo"
    end
end
if game.Players.LocalPlayer.Character:FindFirstChild(NameWe) then
    if tonumber(game.Players.LocalPlayer.Character:FindFirstChild(NameWe).Level.Value) < tonumber(MasNum) then
        return "true DownTo"
    elseif tonumber(game.Players.LocalPlayer.Character:FindFirstChild(NameWe).Level.Value) >= tonumber(MasNum) then
        return "true UpTo"
    end
end
return "else"
end

local SupComplete = false
local EClawComplete = false
local TalComplete = false
local SharkComplete = false
local DeathComplete = false
local GodComplete = false

function GetAllMeleeFarm()
if SupComplete == false then
    local args = {
        [1] = "BuySuperhuman"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    if CheckMasteryWeapon("Superhuman",400) == "true UpTo" then
        SupComplete = true
    end
end
wait(.5)
if EClawComplete == false then
    local string_1 = "BuyElectricClaw";
    local Target = game:GetService("ReplicatedStorage").Remotes["CommF_"];
    Target:InvokeServer(string_1);

    if CheckMasteryWeapon("Electric Claw",400) == "true UpTo" then
        EClawComplete = true
    end
end
wait(.5)
if TalComplete == false then
    game.ReplicatedStorage.Remotes.CommF_:InvokeServer("BuyDragonTalon")

    if CheckMasteryWeapon("Dragon Talon",400) == "true UpTo" then
        TalComplete = true
    end
end
wait(.5)
if SharkComplete == false then
    local args = {
        [1] = "BuySharkmanKarate"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))

    if CheckMasteryWeapon("Sharkman Karate",400) == "true UpTo" then
        SharkComplete = true
    end
end
wait(.5)
if DeathComplete == false then
    local args = {
        [1] = "BuyDeathStep"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))

    if CheckMasteryWeapon("Death Step",400) == "true UpTo" then
        DeathComplete = true
    end
end
if GodComplete == false then
    local args = {
        [1] = "BuyGodhuman"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))

    if CheckMasteryWeapon("Godhuman",350) == "true UpTo" then
        GodComplete = true
    end
end
end
function InfAb()
if InfAbility then
    if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility") then
        local inf = Instance.new("ParticleEmitter")
        inf.Acceleration = Vector3.new(0,0,0)
        inf.Archivable = true
        inf.Drag = 20
        inf.EmissionDirection = Enum.NormalId.Top
        inf.Enabled = true
        inf.Lifetime = NumberRange.new(0,0)
        inf.LightInfluence = 0
        inf.LockedToPart = true
        inf.Name = "Agility"
        inf.Rate = 500
        local numberKeypoints2 = {
            NumberSequenceKeypoint.new(0, 0);
            NumberSequenceKeypoint.new(1, 4); 
        }
        inf.Size = NumberSequence.new(numberKeypoints2)
        inf.RotSpeed = NumberRange.new(9999, 99999)
        inf.Rotation = NumberRange.new(0, 0)
        inf.Speed = NumberRange.new(30, 30)
        inf.SpreadAngle = Vector2.new(0,0,0,0)
        inf.Texture = ""
        inf.VelocityInheritance = 0
        inf.ZOffset = 2
        inf.Transparency = NumberSequence.new(0)
        inf.Color = ColorSequence.new(Color3.fromRGB(0,0,0),Color3.fromRGB(0,0,0))
        inf.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
    end
else
    if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility") then
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Agility"):Destroy()
    end
end
end

local LocalPlayer = game:GetService'Players'.LocalPlayer
local originalstam = LocalPlayer.Character.Energy.Value
function infinitestam()
LocalPlayer.Character.Energy.Changed:connect(function()
    if InfiniteEnergy then
        LocalPlayer.Character.Energy.Value = originalstam
    end 
end)
end

spawn(function()
pcall(function()
    while wait(.1) do
        if InfiniteEnergy then
            wait(0.1)
            originalstam = LocalPlayer.Character.Energy.Value
            infinitestam()
        end
    end
end)
end)

function NoDodgeCool()
if nododgecool then
    for i,v in next, getgc() do
        if game:GetService("Players").LocalPlayer.Character.Dodge then
            if typeof(v) == "function" and getfenv(v).script == game:GetService("Players").LocalPlayer.Character.Dodge then
                for i2,v2 in next, getupvalues(v) do
                    if tostring(v2) == "0.1" then
                    repeat wait(.1)
                        setupvalue(v,i2,0)
                    until not nododgecool
                    end
                end
            end
        end
    end
end
end

function fly()
local mouse=game:GetService("Players").LocalPlayer:GetMouse''
localplayer=game:GetService("Players").LocalPlayer
game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart")
local torso = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
local speedSET=25
local keys={a=false,d=false,w=false,s=false}
local e1
local e2
local function start()
    local pos = Instance.new("BodyPosition",torso)
    local gyro = Instance.new("BodyGyro",torso)
    pos.Name="EPIXPOS"
    pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
    pos.position = torso.Position
    gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    gyro.CFrame = torso.CFrame
    repeat
            wait()
            localplayer.Character.Humanoid.PlatformStand=true
            local new=gyro.CFrame - gyro.CFrame.p + pos.position
            if not keys.w and not keys.s and not keys.a and not keys.d then
            speed=1
            end
            if keys.w then
            new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
            speed=speed+speedSET
            end
            if keys.s then
            new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
            speed=speed+speedSET
            end
            if keys.d then
            new = new * CFrame.new(speed,0,0)
            speed=speed+speedSET
            end
            if keys.a then
            new = new * CFrame.new(-speed,0,0)
            speed=speed+speedSET
            end
            if speed>speedSET then
            speed=speedSET
            end
            pos.position=new.p
            if keys.w then
            gyro.CFrame = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(-math.rad(speed*15),0,0)
            elseif keys.s then
            gyro.CFrame = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(math.rad(speed*15),0,0)
            else
            gyro.CFrame = workspace.CurrentCamera.CoordinateFrame
            end
    until not Fly
    if gyro then 
            gyro:Destroy() 
    end
    if pos then 
            pos:Destroy() 
    end
    flying=false
    localplayer.Character.Humanoid.PlatformStand=false
    speed=0
end
e1=mouse.KeyDown:connect(function(key)
    if not torso or not torso.Parent then 
            flying=false e1:disconnect() e2:disconnect() return 
    end
    if key=="w" then
        keys.w=true
    elseif key=="s" then
        keys.s=true
    elseif key=="a" then
        keys.a=true
    elseif key=="d" then
        keys.d=true
    end
end)
e2=mouse.KeyUp:connect(function(key)
    if key=="w" then
        keys.w=false
    elseif key=="s" then
        keys.s=false
    elseif key=="a" then
        keys.a=false
    elseif key=="d" then
        keys.d=false
    end
end)
start()
end

function Click()
wait(.1)
game:GetService'VirtualUser':CaptureController()
game:GetService'VirtualUser':Button1Down(Vector2.new(1280, 672))
end

function AutoHaki()
if not game:GetService("Players").LocalPlayer.Character:FindFirstChild("HasBuso") then
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
end
end

function UnEquipWeapon(Weapon)
if game.Players.LocalPlayer.Character:FindFirstChild(Weapon) then
    _G.NotAutoEquip = true
    wait(.5)
    game.Players.LocalPlayer.Character:FindFirstChild(Weapon).Parent = game.Players.LocalPlayer.Backpack
    wait(.1)
    _G.NotAutoEquip = false
end
end

function EquipWeapon(ToolSe)
if not _G.NotAutoEquip then
    if game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe) then
        Tool = game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe)
        wait(.1)
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(Tool)
    end
end
end

spawn(function()
while wait() do
for i,v in pairs(game:GetService("Workspace")["_WorldOrigin"]:GetChildren()) do
    pcall(function()
        if v.Name == ("CurvedRing") or v.Name == ("SlashHit") or v.Name == ("SwordSlash") or v.Name == ("SlashTail") or v.Name == ("Sounds") then
            v:Destroy()
        end
    end)
end
end
end)
function Com(com,...)
local Remote = game:GetService('ReplicatedStorage').Remotes:FindFirstChild("Comm"..com)
if Remote:IsA("RemoteEvent") then
    Remote:FireServer(...)
elseif Remote:IsA("RemoteFunction") then
    Remote:InvokeServer(...)
end
end
function Check_Sword(Sword_Name)
for i, v in pairs(game:GetService("ReplicatedStorage").Remotes['CommF_']:InvokeServer("getInventory")) do
    if (v.Type == "Sword") then
        if v.Name == Sword_Name then
            return true
        end
    end
end
end
function GetWeaponInventory(Weaponname)
for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")) do
    if type(v) == "table" then
        if v.Type == "Sword" then
            if v.Name == Weaponname then
                return true
            end
        end
    end
end
return false
end
local function GetIsLand(...)
local RealtargetPos = {...}
local targetPos = RealtargetPos[1]
local RealTarget
if type(targetPos) == "vector" then
    RealTarget = targetPos
elseif type(targetPos) == "userdata" then
    RealTarget = targetPos.Position
elseif type(targetPos) == "number" then
    RealTarget = CFrame.new(unpack(RealtargetPos))
    RealTarget = RealTarget.Position
end

local ReturnValue
local CheckInOut = math.huge;
if game.Players.LocalPlayer.Team then
    for i,v in pairs(game.Workspace._WorldOrigin.PlayerSpawns:FindFirstChild(tostring(game.Players.LocalPlayer.Team)):GetChildren()) do 
        local ReMagnitude = (RealTarget - v:GetModelCFrame().Position).Magnitude;
        if ReMagnitude < CheckInOut then
            CheckInOut = ReMagnitude;
            ReturnValue = v.Name
        end
    end
    if ReturnValue then
        return ReturnValue
    end 
end
end
function GetDistance(target)
return math.floor((target.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude)
end

function BTP(Position)
game.Players.LocalPlayer.Character.Head:Destroy()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Position
wait(1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Position
game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
end

-- [Tween Functions (toTarget)]
Request_Places = {
    ["Castle on the sea"] = CFrame.new(-5075.50927734375, 314.5155029296875, -3150.0224609375),
    ["Mansion"] = CFrame.new(-12548.998046875, 332.40396118164, -7603.1865234375),
    ["Hydra Island"] = CFrame.new(5753.5478515625, 610.7880859375, -282.33172607421875),
    ["Temple Of Time"] = CFrame.new(28286.35546875, 14895.3017578125, 102.62469482421875),
    ["Beautiful Pirate Entrance"] = CFrame.new(-11993.580078125, 334.7812805175781, -8844.1826171875),
    ["Beautiful Pirate Place"] = CFrame.new(5314.58203125, 25.419387817382812, -125.94227600097656)
}
Request_Places = {
    ["Swan's room"] = CFrame.new(2284.912109375, 15.152046203613281, 905.48291015625),
    ["Mansion"] = CFrame.new(-288.46246337890625, 306.130615234375, 597.9988403320312),
    ["Ghost Ship"] = CFrame.new(923.21252441406, 126.9760055542, 32852.83203125),
    ["Ghost Ship Entrance"] = CFrame.new(-6508.5581054688, 89.034996032715, -132.83953857422)
}
Request_Places = {
    ["Whirl Pool"] = CFrame.new(3864.6884765625, 6.736950397491455, -1926.214111328125),
    ["Sky Area 1"] = CFrame.new(-4607.82275, 872.54248, -1667.55688),
    ["Sky Area 2"] = CFrame.new(-7894.61767578125, 5547.1416015625, -380.29119873046875),
    ["Fish Man"] = CFrame.new(61163.8515625, 11.6796875, 1819.7841796875)
}
local function CheckNearestRequestIsland(place)
    local min_distance = math.huge
    local player = game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    for request_place, cframe in pairs(Request_Places) do
        min_distance = math.min(min_distance, math.abs((place.Position - cframe.Position).Magnitude))
    end
    min_distance = math.min(min_distance, math.abs((place.Position - player.Position).Magnitude))
    for request_place, cframe in pairs(Request_Places) do
        if math.abs((place.Position - cframe.Position).Magnitude) == min_distance then
            return request_place
        end
    end
    return nil
end
_G.lBypassTP = true
local function TP1(...)
local RealtargetPos = {...}
local targetPos = RealtargetPos[1]
local RealTarget
if type(targetPos) == "vector" then
    RealTarget = CFrame.new(targetPos)
elseif type(targetPos) == "userdata" then
    RealTarget = targetPos
elseif type(targetPos) == "number" then
    RealTarget = CFrame.new(unpack(RealtargetPos))
end

if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health == 0 then if tween then tween:Cancel() end repeat wait() until game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health > 0; wait(0.2) end
local request_place = CheckNearestRequestIsland(RealTarget)
if request_place ~= nil then
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance", Request_Places[request_place].Position)
end 
local tweenfunc = {}
local Distance = (RealTarget.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude
if Distance < 25 then
    Speed = 1000
elseif Distance < 50 then
    Speed = 1000
elseif Distance < 150 then
    Speed = 350
elseif Distance < 250 then
    Speed = 350
elseif Distance < 500 then
    Speed = 350
elseif Distance < 750 then
    Speed = 250
elseif Distance >= 1000 then
    Speed = 250
end 
if _G.lBypassTP then
    fkwarp = false
        if Distance > 3000 and request_place == nil and not (game.Players.LocalPlayer.Backpack:FindFirstChild("Special Microchip") or game.Players.LocalPlayer.Character:FindFirstChild("Special Microchip") or game.Players.LocalPlayer.Backpack:FindFirstChild("God's Chalice") or game.Players.LocalPlayer.Character:FindFirstChild("God's Chalice") or game.Players.LocalPlayer.Backpack:FindFirstChild("Hallow Essence") or game.Players.LocalPlayer.Character:FindFirstChild("Hallow Essence") or game.Players.LocalPlayer.Character:FindFirstChild("Sweet Chalice") or game.Players.LocalPlayer.Backpack:FindFirstChild("Sweet Chalice")) and not (CheckQuest()[4] == "Fishman Commando" or CheckQuest()[4] == "Fishman Warrior") then
            if fkwarp == false then
                BTP(RealTarget)
            end
            fkwarp = true
            wait(0.000000000000000001)
            repeat wait() until game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").Health > 0
            wait(0.2)

            return
        end
end
local tween_s = game:service"TweenService"
local info = TweenInfo.new((RealTarget.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude/Speed, Enum.EasingStyle.Linear)

    tween = tween_s:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], info, {CFrame = RealTarget})
return tween
end

function GetMaterial(matname)
for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")) do
    if type(v) == "table" then
        if v.Type == "Material" then
            if v.Name == matname then
                return v.Count
            end
        end
    end
end
return 0
end
local AllMaterial
if World1 then
AllMaterial = {
"Magma Ore",
"Leather",
"Scrap Metal",
"Angel Wings",
"Fish Tail"
}
elseif World2 then
AllMaterial = {
"Magma Ore",
"Scrap Metal",
"Radioactive Material",
"Vampire Fang",
"Mystic Droplet",
}
elseif World3 then
AllMaterial = {
"Mini Tusk",
"Fish Tail",
"Scrap Metal",
"Dragon Scale",
"Conjured Cocoa",
"Demonic Wisp",
"Gunpowder",
}
end
local function VeruTween(place)
local player = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid").Sit == true then
    game.Players.LocalPlayer.Character:FindFirstChild("Humanoid").Sit = false
end
local Distance = (place.Position - player.Position).Magnitude
local speed = 250
if Distance < 250 then
    speed = 5000
elseif Distance < 500 then
    speed = 650
elseif Distance < 1000 then
    speed = 350
elseif Distance >= 1000 then
    speed = 250
end
local TweenService = game:GetService("TweenService")
local start = player.Position
local _end = place.Position
local distance = (start - _end).Magnitude
local _time = distance/(speed)
local info = TweenInfo.new(
    _time,
    Enum.EasingStyle.Linear
)
local tp = TweenService:Create(player, info, {CFrame = place})
return tp
end
function topos(Pos)
    local request_place = CheckNearestRequestIsland(Pos)
    if request_place ~= nil then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance", Request_Places[request_place].Position)
    end
Distance = (Pos.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
if Distance < 25 then
    Speed = 50000000
elseif Distance < 50 then
    Speed = 2000000
elseif Distance < 150 then
    Speed = 800
elseif Distance < 250 then
    Speed = 350
elseif Distance < 500 then
    Speed = 300
elseif Distance < 750 then
    Speed = 250
elseif Distance < 1000 then
    Speed = 250
elseif Distance >= 1000 then
    Speed = 250
end
game:GetService("TweenService"):Create(
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart,
    TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
    {CFrame = Pos}
):Play()
end 

function TPP(CFgo)
if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health <= 0 or not game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid") then tween:Cancel() repeat wait() until game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid") and game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").Health > 0 wait(7) return end
local tween_s = game:service"TweenService"
local info = TweenInfo.new((game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart.Position - CFgo.Position).Magnitude/325, Enum.EasingStyle.Linear)
tween = tween_s:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], info, {CFrame = CFgo})
tween:Play()

local tweenfunc = {}

function tweenfunc:Cancel()
tween:Cancel()
end

return tweenfunc
end
spawn(function()
while wait(.1) do
    if Type == 1 then
        Pos = CFrame.new(0,14,0)
    elseif Type == 2 then
        Pos = CFrame.new(0,14,-30)
    elseif Type == 3 then
        Pos = CFrame.new(30,14,0)
    elseif Type == 4 then
        Pos = CFrame.new(0,15,30)	
    elseif Type == 5 then
        Pos = CFrame.new(-30,15,0)
    
    end
    end
end)

spawn(function()
while wait(.1) do
    Type = 1
    wait(0.2)
    Type = 2
    wait(0.2)
    Type = 3
    wait(0.2)
    Type = 4
    wait(0.2)
    Type = 5
    wait(0.2)
end
end)        
spawn(function()
game:GetService("RunService").Heartbeat:Connect(function()
    if queue:top() == "Auto Farm Level" or queue:top() == "Auto Farm Saber" or queue:top() == "Get Fruits" or queue:top() == "Fully sphm" then
        if not game:GetService("Workspace"):FindFirstChild("LOL") then
            local LOL = Instance.new("Part")
            LOL.Name = "LOL"
            LOL.Parent = game.Workspace
            LOL.Anchored = true
            LOL.Transparency = 1
            LOL.Size = Vector3.new(30,-0.5,30)
        elseif game:GetService("Workspace"):FindFirstChild("LOL") then
            game.Workspace["LOL"].CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -3.6, 0)
        end
    else
        if game:GetService("Workspace"):FindFirstChild("LOL") then
            game:GetService("Workspace"):FindFirstChild("LOL"):Destroy()
        end
    end
end)
end)

spawn(function()
    pcall(function()
        while wait() do
            if queue:top() == "Auto Farm Level" or queue:top() == "Auto Farm Saber" or queue:top() == "Get Fruits" or queue:top() == "Fully sphm" then
                if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                    local Noclip = Instance.new("BodyVelocity")
                    Noclip.Name = "BodyClip"
                    Noclip.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                    Noclip.MaxForce = Vector3.new(100000,100000,100000)
                    Noclip.Velocity = Vector3.new(0,0,0)
                end
            end
        end
    end)
end)

spawn(function()
    pcall(function()
        game:GetService("RunService").Stepped:Connect(function()
            if queue:top() == "Auto Farm Level" or queue:top() == "Auto Farm Saber" or queue:top() == "Get Fruits" or _G.Auto_Bone then
                for _, v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
                    if v:IsA("BasePart") then
                        v.CanCollide = false    
                    end
                end
            end
        end)
    end)
end)

function InstancePos(pos)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
end

function TP3(pos)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
end
function StopTween()
        _G.StopTween = true
        wait()
        TP1(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame)
        wait()
        if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy()
        end
        _G.StopTween = false
        _G.Clip = false
end

game:GetService("Players").LocalPlayer.Idled:connect(function()
    game:GetService("VirtualUser"):Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    wait(1)
    game:GetService("VirtualUser"):Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

spawn(function() 
    repeat
        task.wait()
    until game:IsLoaded()
    repeat
        task.wait()
    until game.Players
    repeat
        task.wait()
    until game.Players.LocalPlayer and game.Players.LocalPlayer.Team ~= nil 
    wait(1.5)
    
end)    
_G.SelectWeapon = "Melee"
task.spawn(function()
    while wait() do
        pcall(function()
            if _G.SelectWeapon == "Melee" then
                for i ,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ToolTip == "Melee" then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                            _G.SelectWeapon = v.Name
                        end
                    end
                end
            elseif _G.SelectWeapon == "Sword" then
                for i ,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ToolTip == "Sword" then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                            _G.SelectWeapon = v.Name
                        end
                    end
                end
            elseif _G.SelectWeapon == "Gun" then
                for i ,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ToolTip == "Gun" then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                            _G.SelectWeapon = v.Name
                        end
                    end
                end
            elseif _G.SelectWeapon == "Fruit" then
                for i ,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                    if v.ToolTip == "Blox Fruit" then
                        if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                            _G.SelectWeapon = v.Name
                        end
                    end
                end
            end
        end)
    end
end)
_G.BringMode = 250
spawn(function()
    while task.wait() do
        pcall(function()
            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                if _G.queue:top() == "Auto Farm Level" and StartMagnet and v.Name == CheckQuest()[4] and (CheckQuest()[4] == "Factory Staff" or CheckQuest()[4] == "Monkey" or CheckQuest()[4] == "Dragon Crew Warrior" or CheckQuest()[4] == "Dragon Crew Archer") and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 and (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 250 then
                    v.HumanoidRootPart.Size = Vector3.new(150,150,150)
                    v.HumanoidRootPart.CFrame = PosMon
                    v.Humanoid:ChangeState(14)
                    v.HumanoidRootPart.CanCollide = false
                    v.Head.CanCollide = false
                    if v.Humanoid:FindFirstChild("Animator") then
                        v.Humanoid.Animator:Destroy()
                    end
                    sethiddenproperty(game:GetService("Players").LocalPlayer,"SimulationRadius",math.huge)
                elseif _G.queue:top() == "Auto Farm Level" and StartMagnet and v.Name == CheckQuest()[4] and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 and (v.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= _G.BringMode then
                    v.HumanoidRootPart.Size = Vector3.new(150,150,150)
                    v.HumanoidRootPart.CFrame = PosMon
                    v.Humanoid:ChangeState(14)
                    v.HumanoidRootPart.CanCollide = false
                    v.Head.CanCollide = false
                    if v.Humanoid:FindFirstChild("Animator") then
                        v.Humanoid.Animator:Destroy()
                    end
                    sethiddenproperty(game:GetService("Players").LocalPlayer,"SimulationRadius",math.huge)
                end
                if _G.Auto_Bone and StartMagnetBoneMon then
                    if (v.Name == "Reborn Skeleton" or v.Name == "Living Zombie" or v.Name == "Demonic Soul" or v.Name == "Posessed Mummy") and (v.HumanoidRootPart.Position - PosMonBone.Position).Magnitude <= _G.BringMode and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                        v.Humanoid:ChangeState(14)
                        v.HumanoidRootPart.CanCollide = false
                        v.Head.CanCollide = false
                        v.HumanoidRootPart.CFrame = PosMonBone
                        if v.Humanoid:FindFirstChild("Animator") then
                            v.Humanoid.Animator:Destroy()
                        end
                        sethiddenproperty(game:GetService("Players").LocalPlayer, "SimulationRadius", math.huge)
                    end
                end
                
            end
        end)
    end
end)
local plr = game.Players.LocalPlayer
local CbFw = getupvalues(require(plr.PlayerScripts.CombatFramework))
local CbFw2 = CbFw[2]
function GetCurrentBlade()
    local p13 = CbFw2.activeController
    local ret = p13.blades[1]
    if not ret then return end
    while ret.Parent~=game.Players.LocalPlayer.Character do ret=ret.Parent end
    return ret
end
function AttackNoCD()
    local AC = CbFw2.activeController
    for i = 1, 1 do
        local bladehit = require(game.ReplicatedStorage.CombatFramework.RigLib).getBladeHits(
            plr.Character,
            {plr.Character.HumanoidRootPart},
            60
        )
        local cac = {}
        local hash = {}
        for k, v in pairs(bladehit) do
            if v.Parent:FindFirstChild("HumanoidRootPart") and not hash[v.Parent] then
                table.insert(cac, v.Parent.HumanoidRootPart)
                hash[v.Parent] = true
            end
        end
        bladehit = cac
        if #bladehit > 0 then
            local u8 = debug.getupvalue(AC.attack, 5)
            local u9 = debug.getupvalue(AC.attack, 6)
            local u7 = debug.getupvalue(AC.attack, 4)
            local u10 = debug.getupvalue(AC.attack, 7)
            local u12 = (u8 * 798405 + u7 * 727595) % u9
            local u13 = u7 * 798405
            (function()
                u12 = (u12 * u9 + u13) % 1099511627776
                u8 = math.floor(u12 / u9)
                u7 = u12 - u8 * u9
            end)()
            u10 = u10 + 1
            debug.setupvalue(AC.attack, 5, u8)
            debug.setupvalue(AC.attack, 6, u9)
            debug.setupvalue(AC.attack, 4, u7)
            debug.setupvalue(AC.attack, 7, u10)
            pcall(function()
                if plr.Character:FindFirstChildOfClass("Tool") and AC.blades and AC.blades[1] then
                    AC.animator.anims.basic[1]:Play(0.01,0.01,0.01)
                    game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("weaponChange",tostring(GetCurrentBlade()))
                    game.ReplicatedStorage.Remotes.Validator:FireServer(math.floor(u12 / 1099511627776 * 16777215), u10)
                    game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("hit", bladehit, i, "")
                end
            end)
        end
    end
    
end
i = tick()
		
coroutine.wrap(function()
    spawn(function()
        while wait(0.2) do
                if SFastAttack then
                    if tick() - i <= 3 then
                        pcall(function()
                            repeat task.wait()
                                AttackNoCD(0.05)
                            until not SFastAttack or tick() - i > 3
                        end)
                    else wait()
                        i = tick()
                    end
                end
        end
    end)
end)()
function autofarm()
    local MyLevel = game.Players.LocalPlayer.Data.Level.Value
    local QuestC = game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest
    local QuestTitle = game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text
    pcall(function()
            CheckQuest()
            if queue:top() ~= "Auto Farm Level" then
                if QuestC.Visible == true then
                    if game:GetService("Workspace").Enemies:FindFirstChild(CheckQuest()[4]) then
                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                            if v.Name == CheckQuest()[4] then
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    repeat task.wait()
                                        StartMagnet = true
                                        SFastAttack = true
                                        EquipWeapon(_G.SelectWeapon)
                                        AutoHaki()
                                        v.HumanoidRootPart.Transparency = 1
                                        PosMon = v.HumanoidRootPart.CFrame
                                        Sex_Tween = TP1(v.HumanoidRootPart.CFrame * CFrame.new(0,30,0))
                                        Sex_Tween:Play()
                                    until not queue:top() == "Auto Farm Level" or not v.Parent or v.Humanoid.Health <= 0 or QuestC.Visible == false or not v:FindFirstChild("HumanoidRootPart")
                                end
                            end
                        end
                    else
                        Sex_Tween = TP1(CheckQuest()[5])
                        Sex_Tween:Play()
                    end
                elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false or not game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text:find(CheckQuest()[4], 1, true) then
                    Sex_Tween = TP1(CheckQuest()[3])
                    Sex_Tween:Play()
                    if (CheckQuest()[3].Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 1 then
                        StartMagnet = false
                        game:GetService('ReplicatedStorage').Remotes.CommF_:InvokeServer("StartQuest", CheckQuest()[1], CheckQuest()[2]) wait(0.5)
                        Sex_Tween(CheckQuest()[5])
                        Sex_Tween:Play()
                    end
                end
            end
    end)
end
local function CheckFruit()
    for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
        if v:FindFirstChild("Fruit") then
            return true
        end
    end
    return false
end
function getsaber()
    pcall(function()
        if queue:top() == "Auto Farm Saber" and game.Players.LocalPlayer.Data.Level.Value >= 200 and not game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Saber") and not game.Players.LocalPlayer.Character:FindFirstChild("Saber") then
            if game:GetService("Workspace").Map.Jungle.Final.Part.Transparency == 0 then
                if game:GetService("Workspace").Map.Jungle.QuestPlates.Door.Transparency == 0 then
                    if (CFrame.new(-1612.55884, 36.9774132, 148.719543, 0.37091279, 3.0717151e-09, -0.928667724, 3.97099491e-08, 1, 1.91679348e-08, 0.928667724, -4.39869794e-08, 0.37091279).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 100 then
                        Sex_Tween = TP1(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame)
                        Sex_Tween:Play()
                        wait(1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Jungle.QuestPlates.Plate1.Button.CFrame
                        wait(1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Jungle.QuestPlates.Plate2.Button.CFrame
                        wait(1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Jungle.QuestPlates.Plate3.Button.CFrame
                        wait(1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Jungle.QuestPlates.Plate4.Button.CFrame
                        wait(1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Jungle.QuestPlates.Plate5.Button.CFrame
                        wait(1) 
                    else
                        Sex_Tween = TP1(CFrame.new(-1612.55884, 36.9774132, 148.719543, 0.37091279, 3.0717151e-09, -0.928667724, 3.97099491e-08, 1, 1.91679348e-08, 0.928667724, -4.39869794e-08, 0.37091279))
                        Sex_Tween:Play()
                    end
                else
                    if game:GetService("Workspace").Map.Desert.Burn.Part.Transparency == 0 then
                        if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Torch") or game.Players.LocalPlayer.Character:FindFirstChild("Torch") then
                            EquipWeapon("Torch")
                            topos(CFrame.new(1114.61475, 5.04679728, 4350.22803, -0.648466587, -1.28799094e-09, 0.761243105, -5.70652914e-10, 1, 1.20584542e-09, -0.761243105, 3.47544882e-10, -0.648466587))
                        else
                            topos(CFrame.new(-1610.00757, 11.5049858, 164.001587, 0.984807551, -0.167722285, -0.0449818149, 0.17364943, 0.951244235, 0.254912198, 3.42372805e-05, -0.258850515, 0.965917408))                 
                        end
                    else
                        if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","SickMan") ~= 0 then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","GetCup")
                            wait(0.5)
                            EquipWeapon("Cup")
                            wait(0.5)
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","FillCup",game:GetService("Players").LocalPlayer.Character.Cup)
                            wait(0)
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","SickMan") 
                        else
                            if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","RichSon") == nil then
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","RichSon")
                            elseif  game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","RichSon") == 0 then
                                if game:GetService("Workspace").Enemies:FindFirstChild("Mob Leader") or game:GetService("ReplicatedStorage"):FindFirstChild("Mob Leader [Lv. 120] [Boss]") then
                                    topos(CFrame.new(-2967.59521, -4.91089821, 5328.70703, 0.342208564, -0.0227849055, 0.939347804, 0.0251603816, 0.999569714, 0.0150796166, -0.939287126, 0.0184739735, 0.342634559))
                                    for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                        if v.Name == "Mob Leader" then
                                            repeat wait()
                                                SFastAttack = true
                                                AutoHaki()
                                                EquipWeapon(_G.SelectWeapon)
                                                topos(v.HumanoidRootPart.CFrame * CFrame.new(0,15,0))
                                                v.HumanoidRootPart.Size = Vector3.new(60,60,60)

                                                v.Humanoid.JumpPower = 0
                                                v.Humanoid.WalkSpeed = 0
                                                v.HumanoidRootPart.CanCollide = false
                                                v.Humanoid:ChangeState(11)
                                            until v.Humanoid.Health <= 0 or queue:top() == "Auto Farm Saber" == false
                                        end
                                    end
                                end
                            elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","RichSon") == 1 then
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","RichSon")
                                wait(0.5)
                                EquipWeapon("Relic")
                                wait(0.5)
                                topos(CFrame.new(-1404.91504, 29.9773273, 3.80598116, 0.876514494, 5.66906877e-09, 0.481375456, 2.53851997e-08, 1, -5.79995607e-08, -0.481375456, 6.30572643e-08, 0.876514494))
                            end
                        end
                    end
                end
            else
                if game:GetService("Workspace").Enemies:FindFirstChild("Saber Expert") or game:GetService("ReplicatedStorage"):FindFirstChild("Saber Expert") then
                    topos(CFrame.new(-1401.85046, 29.9773273, 8.81916237, 0.85820812, 8.76083845e-08, 0.513301849, -8.55007443e-08, 1, -2.77243419e-08, -0.513301849, -2.00944328e-08, 0.85820812))
                    for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                        if v.Name == "Saber Expert" then
                            repeat wait()
                                StartMagnet = true
                                SFastAttack = true
                                AutoHaki()
                                EquipWeapon(_G.SelectWeapon)
                                topos(v.HumanoidRootPart.CFrame * CFrame.new(0,_G.Settings.Configs["Distance Auto Farm"],0))
                                v.Humanoid.JumpPower = 0
                                v.Humanoid.WalkSpeed = 0
                                v.HumanoidRootPart.CanCollide = false
                                v.Humanoid:ChangeState(11)
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint")
                            until v.Humanoid.Health <= 0 or queue:top() == "Auto Farm Saber" == false
                            if v.Humanoid.Health <= 0 then
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress","PlaceRelic")
                            end
                        end
                    end
                end
            end
        end
    end)
end
function tweenfruit()
    if queue:top() == "Get Fruits" then
        for i,v in pairs(game.Workspace:GetChildren()) do
            if string.find(v.Name, "Fruit") then
                topos(v.Handle.CFrame)
            end
        end
    end
end
local function CanStoreFruit(fruit)
    local Max_Fruit_Cap = game:GetService("Players").LocalPlayer.Data.FruitCap.Value
    local Fruit_Storage = 0
    for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventoryFruits")) do
        if v.Name == fruit then
            Fruit_Storage = Fruit_Storage + 1
        end
    end
    if Fruit_Storage < Max_Fruit_Cap then
        return true
    end
    return false
end
local function StoreFruit()
    for a, b in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
        if string.match(b.Name, "Fruit$") then
            local name = b.Name:match("(%S+)")
            local fruit = name.. "-" ..name
            if CanStoreFruit(fruit) then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit", fruit, game:GetService("Players").LocalPlayer.Character:FindFirstChild(b.Name) or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(b.Name))
            end
        end
    end
    for a, b in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
        if string.match(b.Name, "Fruit$") then
            local name = b.Name:match("(%S+)")
            local fruit = name.. "-" ..name
            if CanStoreFruit(fruit) then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit", fruit, game:GetService("Players").LocalPlayer.Character:FindFirstChild(b.Name) or game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(b.Name))
            end
        end
    end
end
function killaura()
    for _,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
        if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
            pcall(function()
                sethiddenproperty(game:GetService("Players").LocalPlayer, "MaximumSimulationRadius",  math.huge)
                sethiddenproperty(game:GetService("Players").LocalPlayer, "SimulationRadius",  9e20)
                v.Humanoid.Health = 0
            end)
        end
    end
end
-- game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman", true) == 1
local function GetLowestValueFruit()
    local min = math.huge
    for i, v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventoryFruits")) do
        min = math.min(min, v.Price)
    end
    for i, v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventoryFruits")) do
        if v.Price == min and v.Price <= 1000000 then
            return v.Name
        end
    end
    return nil
end
local function AutoRaid()
    if not World1 then
        if game:GetService("Players").LocalPlayer.PlayerGui.Main.Timer.Visible == false then
            if not Dungeon_Wait then
                if not _G.Raidsphm then
                    StopTween()
                    return
                end
                if not _G.Raidsphm then
                    StopTween()
                    return
                end
                if not game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Special Microchip") and not game:GetService("Players").LocalPlayer.Character:FindFirstChild("Special Microchip") then
                    local fruit = GetLowestValueFruit()
                    if fruit == nil then
                        if _G.Raidsphm then
                            if CheckFruit() then
                                for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
                                    if v:FindFirstChild("Fruit") then
                                        if not _G.Raidsphm then
                                            StopTween()
                                            return
                                        end
                                        topos(v.Handle.CFrame)
                                        if not _G.Raidsphm then
                                            StopTween()
                                            return
                                        end
                                        
                                        if not _G.Raidsphm then
                                            StopTween()
                                            return
                                        end
                                    end
                                end
                                StoreFruit()
                                return
                            end
                        end
                    end
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit", fruit)
                    if not _G.Raidsphm then
                        StopTween()
                        return
                    end
                    EquipWeapon(fruit)
                    if not _G.Raidsphm then
                        StopTween()
                        return
                    end
                end
                if World2 then
                    fireclickdetector(game:GetService("Workspace").Map.CircleIsland.RaidSummon2.Button.Main.ClickDetector)
                elseif World3 then
                    fireclickdetector(game:GetService("Workspace").Map["Boat Castle"].RaidSummon2.Button.Main.ClickDetector)
                end
                if not _G.Raidsphm then
                    StopTween()
                    return
                end
                Dungeon_Wait = true
                repeat task.wait(1)
                    if not _G.Raidsphm then
                        StopTween()
                        break
                    end
                until game:GetService("Players").LocalPlayer.PlayerGui.Main.Timer.Visible == true
                Dungeon_Wait = false
            end
        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Timer.Visible == true then
            if not _G.Raidsphm then
                StopTween()
                return
            end
            killaura()
            if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 5") and (game:GetService("Workspace")["_WorldOrigin"].Locations["Island 5"].Position - game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude <= 5000 then
                if not _G.Raidsphm then
                    StopTween()
                    return
                end
                topos(game:GetService("Workspace")["_WorldOrigin"].Locations["Island 5"].CFrame*CFrame.new(0,80,0))
                if not _G.Raidsphm then
                    StopTween()
                    return
                end
                
            elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 4") and (game:GetService("Workspace")["_WorldOrigin"].Locations["Island 4"].Position - game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude <= 5000 then
                if not _G.Raidsphm then
                    StopTween()
                    return
                end
                topos(game:GetService("Workspace")["_WorldOrigin"].Locations["Island 4"].CFrame*CFrame.new(0,80,0))
                if not _G.Raidsphm then
                    StopTween()
                    return
                end
                
            elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 3") and (game:GetService("Workspace")["_WorldOrigin"].Locations["Island 3"].Position - game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude <= 5000 then
                if not _G.Raidsphm then
                    StopTween()
                    return
                end
                topos(game:GetService("Workspace")["_WorldOrigin"].Locations["Island 3"].CFrame*CFrame.new(0,80,0))
                if not _G.Raidsphm then
                    StopTween()
                    return
                end
                
            elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 2") and (game:GetService("Workspace")["_WorldOrigin"].Locations["Island 2"].Position - game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude <= 5000 then
                if not _G.Raidsphm then
                    StopTween()
                    return
                end
                topos(game:GetService("Workspace")["_WorldOrigin"].Locations["Island 2"].CFrame*CFrame.new(0,80,0))
                if not _G.Raidsphm then
                    StopTween()
                    return
                end
                
            elseif game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island 1") and (game:GetService("Workspace")["_WorldOrigin"].Locations["Island 1"].Position - game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude <= 5000 then
                if not _G.Raidsphm then
                    StopTween()
                    return
                end
                topos(game:GetService("Workspace")["_WorldOrigin"].Locations["Island 1"].CFrame*CFrame.new(0,80,0))
                if not _G.Raidsphm then
                    StopTween()
                    return
                end
                
            end
        end
    end
end
function fullysuperhuman()
    if queue:top() == "Fully sphm" then
        if
            game.Players.LocalPlayer.Backpack:FindFirstChild("Combat") or
                game.Players.LocalPlayer.Character:FindFirstChild("Combat") and
                    game:GetService("Players")["LocalPlayer"].Data.Beli.Value >= 150000
         then
            wait(.1)
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyBlackLeg")
        end
        if
            game.Players.LocalPlayer.Character:FindFirstChild("Superhuman") or
                game.Players.LocalPlayer.Backpack:FindFirstChild("Superhuman")
         then
            _G.SelectWeapon = "Melee"
        end
        if
            game.Players.LocalPlayer.Backpack:FindFirstChild("Black Leg") or
                game.Players.LocalPlayer.Character:FindFirstChild("Black Leg") or
                game.Players.LocalPlayer.Backpack:FindFirstChild("Electro") or
                game.Players.LocalPlayer.Character:FindFirstChild("Electro") or
                game.Players.LocalPlayer.Backpack:FindFirstChild("Fishman Karate") or
                game.Players.LocalPlayer.Character:FindFirstChild("Fishman Karate") or
                game.Players.LocalPlayer.Backpack:FindFirstChild("Dragon Claw") or
                game.Players.LocalPlayer.Character:FindFirstChild("Dragon Claw")
         then
            if
                game.Players.LocalPlayer.Backpack:FindFirstChild("Black Leg") and
                    game.Players.LocalPlayer.Backpack:FindFirstChild("Black Leg").Level.Value <= 299
             then
                _G.SelectWeapon = "Black Leg"
            end
            if
                game.Players.LocalPlayer.Backpack:FindFirstChild("Electro") and
                    game.Players.LocalPlayer.Backpack:FindFirstChild("Electro").Level.Value <= 299
             then
                _G.SelectWeapon = "Electro"
            end
            if
                game.Players.LocalPlayer.Backpack:FindFirstChild("Fishman Karate") and
                    game.Players.LocalPlayer.Backpack:FindFirstChild("Fishman Karate").Level.Value <= 299
             then
                _G.SelectWeapon = "Fishman Karate"
            end
            if queue:top() == "Fully sphm" and game.Players.LocalPlayer.Data.Fragments.Value < 1500 then
                _G.Raidsphm = true
                _G.AutoSuperhuman = false
            elseif queue:top() == "Fully sphm" and game.Players.LocalPlayer.Data.Fragments.Value >= 1500 then
                UnEquipWeapon("Fishman Karate")
                wait(.1)
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                    "BlackbeardReward",
                    "DragonClaw",
                    "1"
                )
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                    "BlackbeardReward",
                    "DragonClaw",
                    "2"
                )
            else
                _G.Raidsphm = false
                _G.AutoSuperhuman = true
                if
                    game.Players.LocalPlayer.Backpack:FindFirstChild("Dragon Claw") and
                        game.Players.LocalPlayer.Backpack:FindFirstChild("Dragon Claw").Level.Value <= 299
                 then
                    _G.SelectWeaponHere = "Dragon Claw"
                end
                wait(0.1)
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman")
            end
        end
    end
end
task.spawn(function()
    pcall(function()
        while wait() do 
            if _G.AutoSuperhuman then
                if game.Players.LocalPlayer.Backpack:FindFirstChild("Combat") or game.Players.LocalPlayer.Character:FindFirstChild("Combat") and game:GetService("Players")["LocalPlayer"].Data.Beli.Value >= 150000 then
                    wait(.1)
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyBlackLeg")
                end   
                if game.Players.LocalPlayer.Character:FindFirstChild("Superhuman") or game.Players.LocalPlayer.Backpack:FindFirstChild("Superhuman") then
                    _G.SelectWeapon = "Superhuman"
                end  
                if game.Players.LocalPlayer.Backpack:FindFirstChild("Black Leg") or game.Players.LocalPlayer.Character:FindFirstChild("Black Leg") or game.Players.LocalPlayer.Backpack:FindFirstChild("Electro") or game.Players.LocalPlayer.Character:FindFirstChild("Electro") or game.Players.LocalPlayer.Backpack:FindFirstChild("Fishman Karate") or game.Players.LocalPlayer.Character:FindFirstChild("Fishman Karate") or game.Players.LocalPlayer.Backpack:FindFirstChild("Dragon Claw") or game.Players.LocalPlayer.Character:FindFirstChild("Dragon Claw") then
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Black Leg") and game.Players.LocalPlayer.Backpack:FindFirstChild("Black Leg").Level.Value <= 299 then
                        _G.SelectWeapon = "Black Leg"
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Electro") and game.Players.LocalPlayer.Backpack:FindFirstChild("Electro").Level.Value <= 299 then
                        _G.SelectWeapon = "Electro"
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Fishman Karate") and game.Players.LocalPlayer.Backpack:FindFirstChild("Fishman Karate").Level.Value <= 299 then
                        _G.SelectWeapon = "Fishman Karate"
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Dragon Claw") and game.Players.LocalPlayer.Backpack:FindFirstChild("Dragon Claw").Level.Value <= 299 then
                        _G.SelectWeapon = "Dragon Claw"
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Black Leg") and game.Players.LocalPlayer.Backpack:FindFirstChild("Black Leg").Level.Value >= 300 and game:GetService("Players")["LocalPlayer"].Data.Beli.Value >= 300000 then
                        UnEquipWeapon("Black Leg")
                        wait(.1)
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectro")
                    end
                    if game.Players.LocalPlayer.Character:FindFirstChild("Black Leg") and game.Players.LocalPlayer.Character:FindFirstChild("Black Leg").Level.Value >= 300 and game:GetService("Players")["LocalPlayer"].Data.Beli.Value >= 300000 then
                        UnEquipWeapon("Black Leg")
                        wait(.1)
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectro")
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Electro") and game.Players.LocalPlayer.Backpack:FindFirstChild("Electro").Level.Value >= 300 and game:GetService("Players")["LocalPlayer"].Data.Beli.Value >= 750000 then
                        UnEquipWeapon("Electro")
                        wait(.1)
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyFishmanKarate")
                    end
                    if game.Players.LocalPlayer.Character:FindFirstChild("Electro") and game.Players.LocalPlayer.Character:FindFirstChild("Electro").Level.Value >= 300 and game:GetService("Players")["LocalPlayer"].Data.Beli.Value >= 750000 then
                        UnEquipWeapon("Electro")
                        wait(.1)
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyFishmanKarate")
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Fishman Karate") and game.Players.LocalPlayer.Backpack:FindFirstChild("Fishman Karate").Level.Value >= 300 and game:GetService("Players")["Localplayer"].Data.Fragments.Value >= 1500 then
                        UnEquipWeapon("Fishman Karate")
                        wait(.1)
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","DragonClaw","1")
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","DragonClaw","2") 
                    end
                    if game.Players.LocalPlayer.Character:FindFirstChild("Fishman Karate") and game.Players.LocalPlayer.Character:FindFirstChild("Fishman Karate").Level.Value >= 300 and game:GetService("Players")["Localplayer"].Data.Fragments.Value >= 1500 then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","DragonClaw","1")
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","DragonClaw","2") 
                    end
                    if game.Players.LocalPlayer.Backpack:FindFirstChild("Dragon Claw") and game.Players.LocalPlayer.Backpack:FindFirstChild("Dragon Claw").Level.Value >= 300 and game:GetService("Players")["LocalPlayer"].Data.Beli.Value >= 3000000 then
                        UnEquipWeapon("Dragon Claw")
                        wait(.1)
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman")
                    end
                    if game.Players.LocalPlayer.Character:FindFirstChild("Dragon Claw") and game.Players.LocalPlayer.Character:FindFirstChild("Dragon Claw").Level.Value >= 300 and game:GetService("Players")["LocalPlayer"].Data.Beli.Value >= 3000000 then
                        UnEquipWeapon("Dragon Claw")
                        wait(.1)
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman")
                    end 
                end
            end
        end
    end)
end)
task.spawn(function()
    pcall(function()
        while wait() do 
            if _G.Raidsphm then
                AutoRaid()
            end
        end
    end)
end)

spawn(function()
    while task.wait(0.01) do
        if World1 then
            queue:push("Auto Farm Level", Priority["Auto Farm Level"])
            if CheckFruit() then
                queue:push("Get Fruits", Priority["Get Fruits"])
            elseif not CheckFruit() then
                queue:pop("Get Fruits")
            end
            --store fruit
            for a, b in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
                if string.match(b.Name, "Fruit$") then
                    queue:push("Store Fruits", Priority["Store Fruits"])
                elseif not string.match(b.Name, "Fruit$") then
                    queue:pop("Store Fruits")
                end
            end
            if not game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman", true) == 1 then
                queue:push("Fully sphm", Priority["Fully sphm"])
            elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman", true) == 1 then
                queue:pop("Fully sphm")
            end
            --saber
            if game.Players.LocalPlayer.Data.Level.Value >= 200 and Check_Sword("Saber") == nil then
                queue:push("Auto Farm Saber", Priority["Auto Farm Saber"])
            elseif game.Players.LocalPlayer.Data.Level.Value >= 200 and Check_Sword("Saber") then
                queue:pop("Auto Farm Saber")
            end
        end
    end
end)
